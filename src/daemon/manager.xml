<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">

<node name="/com/ubuntu/OnlineAccounts/Manager">
  <interface name="com.ubuntu.OnlineAccounts.Manager">

    <!--
        GetAccounts: returns a list of account IDs that satisfy the given
        filters.
    -->
    <method name="GetAccounts">
      <arg name="filters" type="a{sv}" direction="in" />
      <arg name="accounts" type="a(ua{sv})" direction="out" />
      <annotation name="org.qtproject.QtDBus.QtTypeName.In0" value="QVariantMap"/>
      <annotation name="org.qtproject.QtDBus.QtTypeName.Out0"
                  value="QList&lt;AccountInfo&gt;"/>
    </method>

    <!--
        Authenticate: request authentication credentials for the given
        account ID in the context of a particualr service.

        If "interactive" is false, an error will be returned if
        user interaction would be required to retrieve the
        credentials.

        If "invalidate" is true, any stored credentials will be
        ignored and new credentials will be requested from the account
        provider.
    -->
    <method name="Authenticate">
      <arg name="accountId" type="u" direction="in" />
      <arg name="serviceId" type="s" direction="in" />
      <arg name="interactive" type="b" direction="in" />
      <arg name="invalidate" type="b" direction="in" />
      <arg name="parameters" type="a{sv}" direction="in" />
      <arg name="credentials" type="a{sv}" direction="out" />
      <annotation name="org.qtproject.QtDBus.QtTypeName.In4" value="QVariantMap"/>
      <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="QVariantMap"/>
    </method>

    <!--
        RequestAccess: register a new account for use with the given
        service.
    -->
    <method name="RequestAccess">
      <arg name="serviceId" type="s" direction="in" />
      <arg name="parameters" type="a{sv}" direction="in" />
      <arg name="account" type="(ua{sv})" direction="out" />
      <arg name="credentials" type="a{sv}" direction="out" />
      <annotation name="org.qtproject.QtDBus.QtTypeName.In1" value="QVariantMap"/>
      <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="AccountInfo"/>
      <annotation name="org.qtproject.QtDBus.QtTypeName.Out1" value="QVariantMap"/>
    </method>

    <!--
        AccountChanged: emitted when account details are changed.
    -->
    <signal name="AccountChanged">
      <!-- the dictionary  ontains a changeType key, type "u", whose value is
          enum { enabled, disabled, changed }
      -->
      <arg name="account" type="(ua{sv})" />
      <annotation name="org.qtproject.QtDBus.QtTypeName.In0" value="AccountInfo"/>
    </signal>

  </interface>
</node>
